import(stats)
import(utils)

useDynLib(fame)
export(addLast, askForPassword, askForString, as.jul, as.POSIXlt, as.ssDate,
       as.ti, as.tis, availablePort, badClassStop, basis, "basis<-", between,
       blanks, columns, commandLineString, convert, couldBeTi, csv, 
       currentSunday, currentMonday, currentTuesday, currentWednesday,
       currentThursday, currentFriday, currentSaturday,
       currentJanuary, currentFebruary, currentMarch,
       currentApril, currentMay, currentJune, currentJuly, currentAugust,
       currentSeptember, currentOctober, currentNovember, currentDecember,
       currentWeek, currentMonth, currentQuarter, currentHalf, currentQ4, currentYear,
       currentMonthDay, currentQMonth,
       dateRange, day, dayOfMonth, dayOfPeriod, dayOfWeek, dayOfYear,
       description, "description<-", documentation, "documentation<-",
       easter, endServerSession, ensureValidServer,
       fameWhats, fameWildlist, fanSeries, federalHolidays, filter,
       firstBusinessDayOf, firstBusinessDayOfMonth, firstDayOf,
       getfame, goodFriday, groups,
       growth.rate, "growth.rate<-", hexidecimal, hex2numeric, hms,
       holidays, holidaysBetween, hostName, hourly, ilspline,
       interpNA, isEaster, isGoodFriday, isHoliday, isIntradayTif, is.jul,
       isLeapYear, is.ssDate, is.ti, is.tis, jul,
       killProcess, lastDayOf, lags, Lag, Lags, lastBusinessDayOf, lastBusinessDayOfMonth,
       latestSunday, latestMonday, latestTuesday, latestWednesday,
       latestThursday, latestFriday, latestSaturday,
       latestJanuary, latestFebruary, latestMarch,
       latestApril, latestMay, latestJune, latestJuly, latestAugust,
       latestSeptember, latestOctober, latestNovember, latestDecember,
       latestWeek, latestMonth, latestQuarter, latestHalf, latestQ4, latestYear,
       latestMonthDay, lintegrate, mergeSeries, minutely,
       month, naWindow, nextBusinessDay, observed, "observed<-",
       pad.string, pgid, pid, portsInUse, ppid, previousBusinessDay,
       putfame, pwd, quarter, receiveFromServer, receiveSocketObject,
       rowMeans, rowSums, rows, runningLinux, runningWindows,
       secondly, sendExpression, sendSocketObject, sendToServer,
       serveHostAndPort, serverSession, setDefaultFrequencies, ssDate, ssh,
       "start<-", startRemoteServer, stripClass,
       stripBlanks, stripTis, ti, tiBusiness, tiDaily, tif, tifList,
       tifToFameName, tif2freq, tifName, tis, tisFromCsv, today, t.tis,
       tunnelSeries, user, validServerIsRunning, year, ymd)

## not exported
## convertFreqCode, fameBasiss, fameClasses, fameObserveds, fameToTif,
## fameTypes, fameModeInt, freq2tif, getFamePath, hasExpired, initialTifList,
## is.time, is.ymd, jul2ti, jul2time, jul2ymd, jul2yp, julToTi,
## julToWeekday, period, ti2jul, ti2time, ti2ymd, ti2yp,
## tifToFame, ymdToTi, ymd2ti, yp2jul, yp2ti, yp2time, yp2ymd

S3method("[", jul)
S3method("[", ssDate)
S3method("[", ti)
S3method("[", tis)
S3method("[<-", tis)
S3method(aggregate, tis)
S3method(aggregate, ts)
S3method(as.character, jul)
S3method(as.character, ti)
S3method(as.data.frame, tis)
S3method(as.Date, jul)
S3method(as.Date, ti)
S3method(as.matrix, tis)
S3method(as.POSIXct, jul)
S3method(as.POSIXct, ti)
S3method(as.POSIXlt, Date)
S3method(as.POSIXlt, default)
S3method(as.POSIXlt, jul)
S3method(as.POSIXlt, POSIXlt)
S3method(as.POSIXlt, ti)
S3method(as.tis, default)
S3method(as.tis, tis)
S3method(as.tis, ts)
S3method(as.ts, tis)
S3method(cbind, tis)
S3method(c, jul)
S3method(c, ssDate)
S3method(c, ti)
S3method(cummax, tis)
S3method(cummin, tis)
S3method(cumprod, tis)
S3method(cumsum, tis)
S3method(cycle, ti)
S3method(cycle, tis)
S3method(deltat, ti)
S3method(deltat, tis)
S3method(diff, jul)
S3method(diff, ti)
S3method(diff, tis)
S3method(edit, ti)
S3method(edit, tis)
S3method(end, tis)
S3method(filter, default)
S3method(filter, tis)
S3method(format, default)
S3method(format, jul)
S3method(format, POSIXct)
S3method(format, POSIXlt)
S3method(format, ti)
S3method(frequency, ti)
S3method(frequency, tis)
S3method(jul, Date)
S3method(jul, default)
S3method(jul, jul)
S3method(jul, ssDate)
S3method(jul, ti)
S3method(lag, tis)
S3method(lines, tis)
S3method(max, jul)
S3method(max, ssDate)
S3method(max, ti)
S3method(min, jul)
S3method(min, ssDate)
S3method(min, ti)
S3method(months, default)
S3method(Ops, jul)
S3method(Ops, ssDate)
S3method(Ops, ti)
S3method(Ops, tis)
S3method(points, tis)
S3method(print, jul)
S3method(print, serverSession)
S3method(print, ssDate)
S3method(print, ti)
S3method(print, tis)
S3method(quarters, default)
S3method(rep, jul)
S3method(rep, ssDate)
S3method(rep, ti)
S3method(rowMeans, default)
S3method(rowMeans, tis)
S3method(rowSums, default)
S3method(rowSums, tis)
S3method(seq, jul)
S3method(seq, ssDate)
S3method(seq, ti)
S3method(solve, tridiag)
S3method(start, tis)
S3method(ti, Date)
S3method(ti, default)
S3method(ti, jul)
S3method(ti, ssDate)
S3method(ti, ti)
S3method(ti, tis)
S3method(tifName, default)
S3method(tifName, ti)
S3method(tifName, tis)
S3method(tif, default)
S3method(tif, ti)
S3method(tif, tis)
S3method(tif, ts)
S3method(time, jul)
S3method(time, ssDate)
S3method(time, ti)
S3method(time, tis)
S3method(weekdays, default)
S3method(window, tis)
S3method(ymd, default)
S3method(ymd, jul)
S3method(ymd, ssDate)
S3method(ymd, ti)

if(tools:::.OStype() == "unix"){
export(alarmc, fameCommand, fameDbClose, fameDbOpen, fameDeleteObject,
       fameRunning, fameStart, fameStatusMessage, fameStop,
       fameWhat, fameWriteSeries )
}
